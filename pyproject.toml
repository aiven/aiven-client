# NOTE: you have to use single-quoted strings in TOML for regular expressions.
# It's the equivalent of r-strings in Python.  Multiline strings are treated as
# verbose regular expressions by Black.  Use [ ] to denote a significant space
# character.
[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name="aiven-client"
authors = [
  { name="Aiven", email="support@aiven.io" },
]
description="Aiven.io client library / command-line client"
readme = "README.rst"
requires-python = ">=3.9"
classifiers=[
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
]
license = { text = "Apache License 2.0" }
dynamic = ["version"]
dependencies = [
    'requests>=2.2.1; sys_platform == "linux"',
    'requests>=2.9.1; sys_platform != "linux"',
    "requests-toolbelt>=0.9.0",
    "certifi>=2015.11.20.1",
]
[project.optional-dependencies]
dev = [
    # Lock black to the same major version used in downstream build environments
    "black>=24.4.2",
    "flake8",
    # Lock mypy to the same major version used in downstream build environments
    "mypy>=1.17.1,<2.0",
    # Lock types-requests to the same major version used in downstream build environments
    "types-requests>=2.26.1,<3.0",
    "pytest",
    # Lock isort to the same major version used in downstream build environments
    "isort>=6.1.0,<7.0",
    "click",
    "ruff",
]


[project.urls]
"Homepage" = "https://github.com/aiven/aiven-client"
"Bug Tracker" = "https://github.com/aiven/aiven-client/issues"
"Documentation" = "https://docs.aiven.io/docs/tools/cli"

[project.scripts]
avn = "aiven.client.__main__:main"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "aiven/client/version.py"

[tool.hatch.build.targets.wheel]
packages = ["aiven"]

[tool.black]
line-length = 125
target-version = ['py38', 'py39', 'py310', 'py311', 'py312', 'py313', 'py314']
include = '\.pyi?$'
exclude = '''
/(
  \.direnv|\.eggs|\.git|\.mypy_cache|\.venv
)
'''

[tool.isort]
combine_as_imports = true
force_alphabetical_sort = true
line_length = 125
no_sections = true  # This breaks the python convention...
# The below settings are specifically required for Black compatibility
profile = "black"

[tool.ruff]
target-version = "py39"
line-length = 125
src = ["aiven", "tests"]
extend-exclude = [
  "aiven/client/version.py",  # Auto-generated file
]

[tool.ruff.lint]
extend-select = [
  "PL",  # Enable pylint rules
  "UP",  # Enable pyupgrade rules
]
ignore = [
  "PLR0913",  # It is too difficult to avoid "Too many arguments" error in the codebase
  "UP032",  # Downstream has different rules for f-strings
]
